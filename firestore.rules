rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and update their own profile, but not change their role or balance.
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId
                   && !(request.resource.data.role in ['admin', 'agent'])
                   && request.resource.data.walletBalance == resource.data.walletBalance
                   && request.resource.data.cashBalance == resource.data.cashBalance
                   && request.resource.data.creditBalance == resource.data.creditBalance;
      
      // Admins and agents can read any user profile.
      allow get: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'agent'];
    }

    // Admins can manage all users. Agents can manage their own assigned users.
    match /users/{userId} {
      allow list, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'agent'
                   && resource.data.agentId == request.auth.uid;
    }
    
    // Bets: Users can create their own bets. Admins/agents can read bets.
    match /bets/{betId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read: if request.auth != null && (
        request.auth.uid == resource.data.userId || 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'agent']
      );
    }
    
    // Transactions: Users can read their own transactions.
    match /transactions/{transactionId} {
      allow read: if request.auth != null && (
        request.auth.uid == resource.data.fromId || 
        request.auth.uid == resource.data.toId
      );
    }

    // Results: All authenticated users can read results.
    match /results/{gameName} {
      allow read: if request.auth != null;
    }
    match /historical_results/{resultId} {
      allow read: if request.auth != null;
    }
    
    // Settings: All authenticated users can read settings.
    match /settings/{settingId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Deposits and Withdrawals
    match /deposits/{depositId} {
        allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
        allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /withdrawals/{withdrawalId} {
        allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
        allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'agent'];
    }

    // Admins can manage result locks
    match /result_locks/{lockId} {
        allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
