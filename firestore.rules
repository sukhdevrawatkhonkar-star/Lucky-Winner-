rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check if a user is an agent
    function isAgent() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'agent';
    }
    
    // USERS collection
    match /users/{userId} {
      // Admins can read/write any user profile
      // Authenticated users can read/write their own profile
      allow read, write: if isAdmin() || request.auth.uid == userId;
      // Agents can read profiles of users assigned to them
      allow read: if isAgent() && resource.data.agentId == request.auth.uid;
    }

    // BETS collection
    match /bets/{betId} {
      // Users can create their own bets
      allow create: if request.auth.uid == request.resource.data.userId;
      // Users can read their own bets
      allow read: if request.auth.uid == resource.data.userId;
      // Admins can read all bets
      allow read: if isAdmin();
      // Agents can read bets of their assigned users
      allow read: if isAgent() && resource.data.agentId == request.auth.uid;
      // No one can update or delete bets after they are placed
      allow update, delete: if false;
    }

    // TRANSACTIONS collection
    match /transactions/{transactionId} {
      // Only backend (server actions) can create transactions
      allow create: if true; // Secure via server logic
      // Users can read transactions where they are the sender or receiver
      allow read: if request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId;
      // Admins and Agents can read all transactions (for their ledgers)
      allow read: if isAdmin() || isAgent();
      // No one can update or delete transactions
      allow update, delete: if false;
    }
    
    // DEPOSITS and WITHDRAWALS collections
    match /{collection}/{requestId} where collection in ['deposits', 'withdrawals'] {
       // Users can create their own requests
      allow create: if request.auth.uid == request.resource.data.userId;
      // Users can read their own requests
      allow read: if request.auth.uid == resource.data.userId;
      // Admins and Agents can read/update all requests within their scope
      allow read, update: if isAdmin() || (isAgent() && resource.data.agentId == request.auth.uid);
      // No one can delete requests
      allow delete: if false;
    }
    
    // RESULTS, HISTORICAL_RESULTS and SETTINGS collections
    match /{collection}/{docId} where collection in ['results', 'historical_results', 'settings'] {
       // All authenticated users can read game results, history, and settings
       allow read: if request.auth.uid != null;
       // Only admins can write/update results and settings
       allow write: if isAdmin();
    }
    
     // RESULT_LOCKS collection (for cron job)
    match /result_locks/{lockId} {
      // Only backend can write locks
      allow write: if true; // Secured via server logic
      // No one needs to read locks directly
      allow read: if false;
    }
  }
}
