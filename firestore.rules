rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check if a user is an agent
    function isAgent() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'agent';
    }
    
    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users can read/update their own profile. Admins/Agents can read anyone's profile.
    match /users/{userId} {
      allow read: if request.auth != null && (isOwner(userId) || isAdmin() || isAgent());
      allow update: if request.auth != null && isOwner(userId);
      allow create, delete: if isAdmin() || isAgent(); // Admins/Agents can create/delete users
    }

    // Publicly readable collections
    match /results/{gameName} {
      allow read: if true;
      allow write: if isAdmin(); // Only admins can write results
    }
    
    match /historical_results/{docId} {
      allow read: if true;
      allow write: if isAdmin(); // Only admins can write results
    }

    match /settings/{docId} {
        allow read: if true;
        allow write: if isAdmin(); // Only admins can write settings
    }

    // Collections accessible only by authenticated users, admins, or agents
    match /bets/{betId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if isAdmin(); // Only admins can modify bets
    }
    
    match /transactions/{txId} {
       allow read: if request.auth != null;
       allow create: if request.auth != null; // Server-side actions will be authenticated
       allow update, delete: if isAdmin();
    }

    match /withdrawals/{reqId} {
       allow read: if request.auth != null;
       allow create: if request.auth != null;
       allow update: if isAdmin() || isAgent();
    }
    
    match /deposits/{reqId} {
       allow read: if request.auth != null;
       allow create: if request.auth != null;
       allow update: if isAdmin();
    }

    // Internal collections - only accessible by admin backend processes
    match /result_locks/{lockId} {
       allow read, write: if false; // Should only be accessed by admin SDK
    }
  }
}
