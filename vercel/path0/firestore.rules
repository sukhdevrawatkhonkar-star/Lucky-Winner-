
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the user is an admin
    function isAdmin() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Helper function to check if the user is an agent
    function isAgent() {
        return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'agent';
    }

    // Users can read/write their own profile, admins/agents can manage users under them
    match /users/{userId} {
      allow read: if isAuthenticated() && (request.auth.uid == userId || isAdmin() || (isAgent() && resource.data.agentId == request.auth.uid));
      allow update: if isAuthenticated() && (request.auth.uid == userId || isAdmin() || isAgent());
      allow create: if isAdmin() || isAgent() || !exists(/databases/$(database)/documents/users/$(userId)); // Allows public registration and admin/agent creation
      allow delete: if isAdmin() || isAgent();
    }

    // Bets: Users can create bets. Admins/agents can read bets.
    match /bets/{betId} {
      allow create: if isAuthenticated();
      allow read: if isAuthenticated() && (request.auth.uid == resource.data.userId || isAdmin() || (isAgent() && resource.data.agentId == request.auth.uid));
      // No updates or deletes allowed to maintain integrity
    }

    // Transactions: Only readable by involved parties or admins/agents
    match /transactions/{txId} {
      allow read: if isAuthenticated() && (request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId || isAdmin() || isAgent());
      // No one can create/update/delete transactions directly. They are created by server actions.
    }
    
    // Deposit/Withdrawal Requests: Users can create, admins/agents can read.
    match /deposits/{depositId} {
        allow create: if isAuthenticated();
        allow read: if isAdmin() || (isAgent() && resource.data.agentId == request.auth.uid);
    }
    match /withdrawals/{withdrawalId} {
        allow create: if isAuthenticated();
        allow read: if isAdmin() || (isAgent() && resource.data.agentId == request.auth.uid);
    }

    // Publicly readable collections
    match /results/{lotteryName} {
      allow read: if true;
    }
     match /historical_results/{docId} {
      allow read: if true;
    }

    match /settings/payoutRates {
      allow read: if true;
    }
    
    // Admins have full access to all other collections
    match /{document=**} {
      allow read, write: if isAdmin();
    }
  }
}
